{
    "DbSelectArea": {
        "description": "Estrutura de Seleção de Área de Banco de Dados em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/DbSelectArea",
        "example": "DbSelectArea('1') // Retorna: .T. ou .F.",
        "parameters": {
            "cArea": {
                "type": "caractere",
                "description": "Nome da área de banco de dados a ser selecionada. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "lógico",
            "description": "Retorna verdadeiro (.T.) se a área foi selecionada com sucesso, caso contrário, falso (.F.)."
        }
    },
    "DbSeek": {
        "description": "Função para Posicionar o Cursor em um Registro de Banco de Dados em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/DbSeek",
        "example": "DbSeek('12345') // Retorna: .T. ou .F.",
        "parameters": {
            "cKey": {
                "type": "caractere",
                "description": "Chave a ser buscada no banco de dados. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "lógico",
            "description": "Retorna verdadeiro (.T.) se a chave foi encontrada, caso contrário, falso (.F.)."
        }
    },
    "FWNoAccent": {
        "description": "Função para Remover Acentos de uma String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/FWNoAccent",
        "example": "FWNoAccent('ação') // Retorna: 'acao'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String que terá sua acentuação removida. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "String sem acentuação."
        }
    },
    "FWMsgRun": {
        "description": "Função para Exibir Mensagem de Execução em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/FWMsgRun",
        "example": "FWMsgRun([oComponent], <bAction>, [cHeader], [cText]) // Retorna: Nenhum valor retornado.",
        "parameters": {
            "oComponent": {
                "type": "object",
                "description": "Componente que será sobreposto com o painel."
            },
            "bAction": {
                "type": "code-block",
                "description": "Bloco de código a ser executado (o Bloco de código receberá o objeto TSay para atualizações)."
            },
            "cHeader": {
                "type": "string",
                "description": "Texto do Header. Valor padrão: \"\"."
            },
            "cText": {
                "type": "string",
                "description": "Texto do Corpo. Valor padrão: \"\"."
            }
        }
    },
    "HttpGet": {
        "description": "Função para Realizar Requisição GET em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/tec/HTTPGet",
        "example": "HttpGet('http://example.com', '', 120, {'Content-Type|application/json'}, @cHeaderGet) // Retorna: Conteúdo da resposta HTTP.",
        "parameters": {
            "cUrl": {
                "type": "caractere",
                "description": "Indica o endereço HTTP com a pasta e o documento solicitado."
            },
            "cGetParms": {
                "type": "caractere",
                "description": "Indica a lista de strings de parâmetros que serão enviadas ao servidor HTTP, através da URI. Caso este parâmetro não seja especificado, o mesmo será considerado vazio ('')."
            },
            "nTimeOut": {
                "type": "numérico",
                "description": "Indica o tempo, em segundos, máximo de inatividade permitido durante a recepção do documento. Caso este parâmetro não seja especificado, o valor padrão assumido será de 120 segundos (2 minutos)."
            },
            "aHeadStr": {
                "type": "vetor",
                "description": "Indica o array que contêm as strings que serão acrescentadas ao header da requisição que será realizada. Utilizar '|' (pipes) para separação entre parâmetro e valor."
            },
            "cHeaderGet": {
                "type": "caractere",
                "description": "Indica o retorno, através de referência, da header de resposta HTTP enviada pelo servidor requisitado. Observação: A variável deve ser declarada antes da chamada da função."
            }
        }
    },
    "Len": {
        "description": "Função para Retornar o Comprimento de uma String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Len",
        "example": "Len('exemplo') // Retorna: 7",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser medida. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "numérico",
            "description": "Retorna o comprimento da string."
        }
    },
    "Time": {
        "description": "Função para Retornar o Horário Atual em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/tec/Time",
        "example": "Time() // Retorna: 'HH:MM:SS'",
        "parameters": {},
        "returns": {
            "type": "caractere",
            "description": "Retorna o horário atual no formato HH:MM:SS."
        }
    },
    "Val": {
        "description": "Função para Converter String em Número em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Val",
        "example": "Val('123.45') // Retorna: 123.45",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser convertida. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "numérico",
            "description": "Retorna o valor numérico da string."
        }
    },
    "ValType": {
        "description": "Função para Retornar o Tipo de Valor em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/ValType",
        "example": "ValType(123) // Retorna: 'N'",
        "parameters": {
            "vValue": {
                "type": "variável",
                "description": "Valor a ser verificado. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna o tipo do valor (C, N, D, L, T, A)."
        }
    },
    "Eval": {
        "description": "Função para Avaliar Expressões em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Eval",
        "example": "Eval('1 + 1') // Retorna: 2",
        "parameters": {
            "cExpression": {
                "type": "caractere",
                "description": "Expressão a ser avaliada. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "variável",
            "description": "Retorna o resultado da expressão avaliada."
        }
    },
    "AllTrim": {
        "description": "Função para Remover Espaços em Branco de uma String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/AllTrim",
        "example": "AllTrim('   exemplo   ') // Retorna: 'exemplo'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser tratada. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a string sem espaços em branco."
        }
    },
    "Str": {
        "description": "Função para Converter Número em String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Str",
        "example": "Str(123.45, 10, 2) // Retorna: '    123.45'",
        "parameters": {
            "nNumero": {
                "type": "numérico",
                "description": "Indica o valor numérico que será convertido para string."
            },
            "nTamanho": {
                "type": "numérico",
                "description": "Indica o tamanho da string que será gerada."
            },
            "nDecimais": {
                "type": "numérico",
                "description": "Indica o número de casas após o símbolo decimal."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna uma string a partir do valor numérico e do tamanho informado no parâmetro."
        }
    },
    "SubStr": {
        "description": "Função para Retornar Substring em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/SubStr",
        "example": "SubStr('exemplo', 2, 3) // Retorna: 'xem'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser manipulada. Valor padrão: \"\"."
            },
            "nPosicao": {
                "type": "numérico",
                "description": "Posição inicial da substring."
            },
            "nTamanho": {
                "type": "numérico",
                "description": "Tamanho da substring. (Não Obrigatório)"
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a substring extraída."
        }
    },
    "SubString": {
        "description": "Função para Retornar Substring em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/SubString",
        "example": "SubString('exemplo', 2, 3) // Retorna: 'xem'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser manipulada. Valor padrão: \"\"."
            },
            "nPosicao": {
                "type": "numérico",
                "description": "Posição inicial da substring."
            },
            "nTamanho": {
                "type": "numérico",
                "description": "Tamanho da substring."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a substring extraída."
        }
    },
    "Stuff": {
        "description": "Função para Eliminar e Inserir Caracteres em uma String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Stuff",
        "example": "Stuff('Meu gato tem pulgas.', 10, 0, 'não ') // Retorna: 'Meu gato não tem pulgas.'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String destino na qual serão eliminados e inseridos caracteres."
            },
            "nInicio": {
                "type": "numérico",
                "description": "Posição inicial na string destino em que ocorre a inserção/eliminação."
            },
            "nElimina": {
                "type": "numérico",
                "description": "Quantidade de caracteres que serão eliminados. (Se for 0, não elimina nada.)"
            },
            "cInsere": {
                "type": "caractere",
                "description": "String que será inserida."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna uma nova string com os caracteres especificados eliminados e a string inserida."
        }
    },
    "At": {
        "description": "Função para Retornar a Posição de uma Substring em uma String em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/At",
        "example": "At('gato', 'Meu gato tem pulgas.') // Retorna: 5",
        "parameters": {
            "cSubstring": {
                "type": "caractere",
                "description": "Substring a ser buscada."
            },
            "cString": {
                "type": "caractere",
                "description": "String na qual será feita a busca."
            }
        },
        "returns": {
            "type": "numérico",
            "description": "Retorna a posição da substring na string. Se não encontrada, retorna 0."
        }
    },
    "Upper": {
        "description": "Função para Converter String para Maiúsculas em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Upper",
        "example": "Upper('exemplo') // Retorna: 'EXEMPLO'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser convertida. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a string convertida para maiúsculas."
        }
    },
    "Lower": {
        "description": "Função para Converter String para Minúsculas em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Lower",
        "example": "Lower('EXEMPLO') // Retorna: 'exemplo'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser convertida. Valor padrão: \"\"."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a string convertida para minúsculas."
        }
    },
    "Posicione": {
        "description": "Função para Posicionar uma Tabela em Determinado Registro em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/Posicione",
        "example": "// Retorna o valor do campo A1_NOME com base na posição do alias SF2 e índice 1 do alias SA1\nPosicione(\"SA1\", 1, xFilial(\"SA1\") + SF2->F2_CLIENTE + SF2->F2_LOJA, \"A1_NOME\")",
        "parameters": {
            "cAlias": {
                "type": "caractere",
                "description": "Alias da tabela a ser posicionada."
            },
            "nOrdem": {
                "type": "caractere",
                "description": "Ordem de índice a ser utilizada."
            },
            "cSeek": {
                "type": "caractere",
                "description": "Expressão a ser utilizada na busca."
            },
            "cField": {
                "type": "caractere",
                "description": "Campo da tabela a ser retornado."
            },
            "cNickName": {
                "type": "caractere",
                "description": "NickName da ordem de índice a ser posicionado. Se informado, o parâmetro nOrdem será desconsiderado."
            }
        },
        "returns": {
            "type": "variável",
            "description": "Retorna o conteúdo do campo informado no parâmetro cField."
        }
    },
    "RpcSetEnv": {
        "description": "Função para Definir o Ambiente de Execução em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/RpcSetEnv",
        "example": "RpcSetEnv('PRODUCAO') // Retorna: .T. ou .F.",
        "parameters": {
            "cRpcEmp": {
                "type": "caractere",
                "description": "Código da empresa."
            },
            "cRpcFil": {
                "type": "caractere",
                "description": "Código da filial."
            },
            "cEnvUser": {
                "type": "caractere",
                "description": "Nome do usuário."
            },
            "cEnvPass": {
                "type": "caractere",
                "description": "Senha do usuário."
            },
            "cEnvMod": {
                "type": "caractere",
                "description": "Código do módulo. Valor padrão: 'FAT'."
            },
            "cFunName": {
                "type": "caractere",
                "description": "Nome da rotina que será setada para retorno da função FunName(). Valor padrão: 'RPC'."
            },
            "aTables": {
                "type": "vetor",
                "description": "Array contendo as tabelas a serem abertas. Valor padrão: {}."
            },
            "lShowFinal": {
                "type": "lógico",
                "description": "Alimenta a variável pública lMsFinalAuto. Valor padrão: .F.."
            },
            "lAbend": {
                "type": "lógico",
                "description": "Se .T., gera mensagem de erro ao ocorrer erro ao checar a licença para a estação. Valor padrão: .T.."
            },
            "lOpenSX": {
                "type": "lógico",
                "description": "Se .T., pega a primeira filial do arquivo SM0 quando não passar a filial e realiza a abertura dos SXs. Valor padrão: .T.."
            },
            "lConnect": {
                "type": "lógico",
                "description": "Se .T., faz a abertura da conexão com servidor As400, SQL Server etc. Valor padrão: .T.."
            }
        },
        "returns": {
            "type": "lógico",
            "description": "Retorna .T. se abriu corretamente o ambiente com a empresa e filial. Caso contrário, retorna .F.."
        }
    },
    "RpcClearEnv": {
        "description": "Função para Limpar o Ambiente de Execução em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/RpcClearEnv",
        "example": "RpcClearEnv() // Retorna: .T. ou .F.",
        "parameters": {},
        "returns": {
            "type": "lógico",
            "description": "Retorna .T. se o ambiente foi limpo corretamente. Caso contrário, retorna .F.."
        }
    },
    "AAdd": {
        "description": "Função para Adicionar Elementos a um Array em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/AAdd",
        "example": "AAdd(aArray, 'novo elemento') // Retorna: .T. ou .F.",
        "parameters": {
            "aArray": {
                "type": "vetor",
                "description": "Array ao qual o elemento será adicionado."
            },
            "vElement": {
                "type": "variável",
                "description": "Elemento a ser adicionado ao array."
            }
        },
        "returns": {
            "type": "lógico",
            "description": "Retorna .T. se o elemento foi adicionado com sucesso. Caso contrário, retorna .F.."
        }
    },
    "PadR": {
        "description": "Função para Preencher String à Direita em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/PadR",
        "example": "PadR('exemplo', 10) // Retorna: 'exemplo   '",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser preenchida. Valor padrão: \"\"."
            },
            "nTamanho": {
                "type": "numérico",
                "description": "Tamanho total da string após o preenchimento."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a string preenchida à direita."
        }
    },
    "PadL": {
        "description": "Função para Preencher String à Esquerda em ADVPL.",
        "documentation": "https://tdn.totvs.com/display/public/framework/PadL",
        "example": "PadL('exemplo', 10) // Retorna: '   exemplo'",
        "parameters": {
            "cString": {
                "type": "caractere",
                "description": "String a ser preenchida. Valor padrão: \"\"."
            },
            "nTamanho": {
                "type": "numérico",
                "description": "Tamanho total da string após o preenchimento."
            }
        },
        "returns": {
            "type": "caractere",
            "description": "Retorna a string preenchida à esquerda."
        }
    },
    "GetNextAlias": {
        "description": "Função para Obter o Próximo Alias em ADVPL.",
        "documentation": "https://terminaldeinformacao.com/knowledgebase/getnextalias/",
        "example": "GetNextAlias() // Retorna: 'ALIAS1'",
        "parameters": {},
        "returns": {
            "type": "caractere",
            "description": "Retorna o próximo alias disponível."
        }
    }
}
