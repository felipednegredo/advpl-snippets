{
  "FWUpper": {
    "description": "Converte todas as letras da string especificada para maiúsculas, incluindo caracteres multibyte.",
    "parameters": {
      "cText": {
        "type": "caractere",
        "description": "Texto de entrada a ser convertido em maiúsculas. Valor padrão: ''."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "String resultante com todas as letras em maiúsculas."
    },
    "example": "FWUpper('Olá Mundo') // Retorna 'OLÁ MUNDO'",
    "documentation": "https://tdn.totvs.com/display/public/framework/FWUpper"
  },
  "FWLower": {
    "description": "Converte todas as letras da string especificada para minúsculas, incluindo caracteres multibyte.",
    "parameters": {
      "cText": {
        "type": "caractere",
        "description": "Texto de entrada a ser convertido em minúsculas. Valor padrão: ''."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "String resultante com todas as letras em minúsculas."
    },
    "example": "FWLower('Olá Mundo') // Retorna 'olá mundo'",
    "documentation": "https://tdn.totvs.com/display/public/framework/FWLower"
  },
  "FWNoAccent": {
    "description": "Remove marcas diacríticas (acentos) de todos os caracteres na string.",
    "parameters": {
      "cText": {
        "type": "caractere",
        "description": "Texto de entrada do qual os acentos serão removidos. Valor padrão: ''."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "String resultante sem caracteres acentuados."
    },
    "example": "FWNoAccent('áéíóú') // Retorna 'aeiou'",
    "documentation": "https://tdn.totvs.com/display/public/framework/FWNoAccent"
  },
  "DbUseArea": {
    "description": "Abre (ou cria) um arquivo de dados em uma área de trabalho especificada.",
    "parameters": {
      "nArea": {
        "type": "numérico",
        "description": "Número da área de trabalho a ser utilizada. Valor padrão: 0."
      },
      "cAlias": {
        "type": "caractere",
        "description": "Apelido para referenciar a área. Valor padrão: '' ."
      }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se a área foi aberta com sucesso, .F. caso contrário."
    },
    "example": "DbUseArea(1, 'Clientes') // Retorna .T. se bem-sucedido",
    "documentation": "https://tdn.totvs.com/display/public/framework/DbUseArea"
  },
  "DbSelectArea": {
    "description": "Seleciona a área de trabalho atual para operações de banco de dados.",
    "parameters": {
      "nArea": {
        "type": "numérico",
        "description": "Número da área de trabalho a ser selecionada. Valor padrão: 0."
      }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se a área foi selecionada com sucesso, .F. caso contrário."
    },
    "example": "DbSelectArea(1) // Retorna .T. se bem-sucedido",
    "documentation": "https://tdn.totvs.com/display/public/framework/DbSelectArea"
  },
  "DbSeek": {
    "description": "Posiciona o cursor em um registro de banco de dados.",
    "parameters": {
      "cKey": {
        "type": "caractere",
        "description": "Chave a ser buscada no banco de dados. Valor padrão: ''."
      }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna verdadeiro (.T.) se a chave foi encontrada, caso contrário, falso (.F.)."
    },
    "example": "DbSeek('12345') // Retorna .T. se bem-sucedido, .F. caso contrário.",
    "documentation": "https://tdn.totvs.com/display/public/framework/DbSeek"
  },
  "DbGoTop": {
    "description": "Posiciona o cursor no primeiro registro do banco de dados.",
    "parameters": {},
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se o ponteiro foi movido para o primeiro registro, .F. caso contrário."
    },
    "example": "DbGoTop() // Retorna .T. se bem-sucedido",
    "documentation": "https://tdn.totvs.com/display/public/framework/DbGoTop"
  },
  "DbSkip": {
    "description": "Move o cursor pelo número especificado de registros a partir da posição atual.",
    "parameters": {
      "nCount": {
        "type": "numérico",
        "description": "Número de registros a pular. Pode ser negativo para retroceder."
      }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se o deslocamento for bem-sucedido, .F. caso contrário."
    },
    "example": "DbSkip(5) // Move 5 registros à frente",
    "documentation": "https://tdn.totvs.com/display/public/framework/DbSkip"
  },
  "MsgInfo": {
    "description": "Exibe uma caixa de mensagem informativa para o usuário com título e botões customizados.",
    "parameters": {
      "cTitle": {
        "type": "caractere",
        "description": "Título da janela de mensagem."
      },
      "cText": {
        "type": "caractere",
        "description": "Texto da mensagem a ser exibida."
      }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se o usuário clicar no botão confirmar, .F. caso contrário."
    },
    "example": "MsgInfo('Atenção','Operação concluída!') // Retorna .T.",
    "documentation": "https://tdn.totvs.com/display/public/framework/MsgInfo"
  },
  "InputBox": {
    "description": "Exibe uma caixa de diálogo para capturar entrada do usuário como string.",
    "parameters": {
      "cPrompt": {
        "type": "caractere",
        "description": "Mensagem de instrução para o usuário."
      },
      "cDefault": {
        "type": "caractere",
        "description": "Valor padrão exibido no campo de entrada."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "Texto digitado pelo usuário, ou string vazia se cancelado."
    },
    "example": "InputBox('Digite seu nome','') // Retorna o nome informado",
    "documentation": "https://tdn.totvs.com/display/public/framework/InputBox"
  }
,
  "AllTrim": {
    "description": "Remove os espaços em branco à direita e à esquerda de uma string.",
    "parameters": {
      "cText": {
        "type": "caractere",
        "description": "Texto cujos espaços serão removidos."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "String resultante sem espaços nas extremidades."
    },
    "example": "AllTrim('  Texto  ') // Retorna 'Texto'",
    "documentation": "https://tdn.totvs.com/display/framework/AllTrim"
  },
  "RTrim": {
    "description": "Remove espaços em branco à direita de uma string.",
    "parameters": {
      "cText": {
        "type": "caractere",
        "description": "Texto cujo espaço à direita será removido."
      }
    },
    "returns": {
      "type": "caractere",
      "description": "String resultante sem espaços à direita."
    },
    "example": "RTrim('Texto  ') // Retorna 'Texto'",
    "documentation": "https://tdn.totvs.com/display/framework/RTrim"
  },
  "PadC": {
    "description": "Centraliza texto em uma largura específica, preenchendo com um caractere.",
    "parameters": {
      "cExp": { "type": "caractere", "description": "Texto a ser centralizado." },
      "nLen": { "type": "numérico", "description": "Largura total da string resultante." },
      "cFill": { "type": "caractere", "description": "Caracter de preenchimento (opcional). Padrão: espaço." }
    },
    "returns": { "type": "caractere", "description": "Texto centralizado com preenchimento." },
    "example": "PadC('X',5) // Retorna '  X  '",
    "documentation": "https://tdn.totvs.com/display/tec/PadC"
  },
  "PadL": {
    "description": "Alinha texto à esquerda em uma largura específica, preenchendo com um caractere.",
    "parameters": {
      "cExp": { "type": "caractere", "description": "Texto a ser alinhado à esquerda." },
      "nLen": { "type": "numérico", "description": "Largura total da string resultante." },
      "cFill": { "type": "caractere", "description": "Caracter de preenchimento (opcional). Padrão: espaço." }
    },
    "returns": { "type": "caractere", "description": "Texto alinhado à esquerda com preenchimento." },
    "example": "PadL('X',5,'*') // Retorna 'X****'",
    "documentation": "https://tdn.totvs.com/display/tec/PadL"
  },
  "PadR": {
    "description": "Alinha texto à direita em uma largura específica, preenchendo com um caractere.",
    "parameters": {
      "cExp": { "type": "caractere", "description": "Texto a ser alinhado à direita." },
      "nLen": { "type": "numérico", "description": "Largura total da string resultante." },
      "cFill": { "type": "caractere", "description": "Caracter de preenchimento (opcional). Padrão: espaço." }
    },
    "returns": { "type": "caractere", "description": "Texto alinhado à direita com preenchimento." },
    "example": "PadR('X',5,'*') // Retorna '****X'",
    "documentation": "https://tdn.totvs.com/display/tec/PadR"
  },
  "StrZero": {
    "description": "Converte número em string, preenchendo com zeros à esquerda e definindo decimais.",
    "parameters": {
      "nValor": { "type": "numérico", "description": "Valor numérico a converter." },
      "nTamanho": { "type": "numérico", "description": "Tamanho total da string resultante." },
      "nDecimal": { "type": "numérico", "description": "Número de casas decimais (opcional)." }
    },
    "returns": { "type": "caractere", "description": "String formatada com zeros." },
    "example": "StrZero(10,5,0) // Retorna '00010'",
    "documentation": "https://tdn.totvs.com/display/tec/StrZero"
  },
  "Str": {
    "description": "Converte número em string, preenchendo com espaços à esquerda e definindo decimais.",
    "parameters": {
      "nNumero": { "type": "numérico", "description": "Valor numérico a converter." },
      "nTamanho": { "type": "numérico", "description": "Tamanho total da string resultante (opcional)." },
      "nDecimais": { "type": "numérico", "description": "Número de casas decimais (opcional)." }
    },
    "returns": { "type": "caractere", "description": "String formatada com espaços." },
    "example": "Str(123.45,7,2) // Retorna ' 123.45'",
    "documentation": "https://tdn.totvs.com/display/tec/Str"
  },
  "FT_FReadLn": {
    "description": "Lê e retorna uma linha de texto de um arquivo aberto com FT_FUse().",
    "parameters": {},
    "returns": { "type": "caractere", "description": "Linha de texto sem delimitadores CRLF." },
    "example": "FT_FReadLn() // Retorna próxima linha do arquivo",
    "documentation": "https://tdn.totvs.com/display/tec/FT_FReadLn"
  },
  "ExecInDllOpen": {
    "description": "Abre uma DLL para execução de funções ou procedures.",
    "parameters": {
      "cPath": { "type": "caractere", "description": "Caminho da DLL a ser aberta." }
    },
    "returns": { "type": "numérico", "description": "Handle da DLL aberto." },
    "example": "hHandle := ExecInDllOpen('caminho.dll')",
    "documentation": "https://tdn.totvs.com/display/tec/ExecInDLLOpen"
  },
  "LocalToUTC": {
    "description": "Converte data e hora local para UTC.",
    "parameters": {
      "cDate": { "type": "caractere", "description": "Data local (yyyyMMdd)." },
      "cTime": { "type": "caractere", "description": "Hora local (hh:mm:ss)." },
      "nDST": { "type": "numérico", "description": "Indicador de horário de verão (0 ou 1, opcional)." }
    },
    "returns": { "type": "vetor", "description": "Array [DataUTC,HoraUTC]" },
    "example": "LocalToUTC('20250110','13:00:00',1)",
    "documentation": "https://tdn.totvs.com/display/tec/LocalToUTC"
  },
  "UTCToLocal": {
    "description": "Converte data e hora UTC para local.",
    "parameters": {
      "cDate": { "type": "caractere", "description": "Data UTC (yyyyMMdd)." },
      "cTime": { "type": "caractere", "description": "Hora UTC (hh:mm:ss)." },
      "nDST": { "type": "numérico", "description": "Indicador de horário de verão (0 ou 1, opcional)." }
    },
    "returns": { "type": "vetor", "description": "Array [DataLocal,HoraLocal]" },
    "example": "UTCToLocal('20250110','15:00:00',0)",
    "documentation": "https://tdn.totvs.com/display/tec/UTCToLocal"
  }
,
  "FError": {
    "description": "Recupera o código de erro após operações de arquivo falhas.",
    "parameters": {},
    "returns": {
      "type": "numérico",
      "description": "Código de erro da última operação de I/O."      
    },
    "example": "nErr := FError() // Retorna código de erro da última operação.",
    "documentation": "https://tdn.totvs.com/display/tec/FError"
  },
  "MsgStop": {
    "description": "Exibe uma caixa de mensagem de advertência com ícone visual.",
    "parameters": {
      "cText": { "type": "caractere", "description": "Texto da mensagem a ser exibida." },
      "cTitle": { "type": "caractere", "description": "Título da janela de mensagem." }
    },
    "returns": {
      "type": "lógico",
      "description": "Retorna .T. se o usuário confirmar, .F. caso contrário."    
    },
    "example": "MsgStop('Ocorreu um erro','Erro') // Exibe aviso de erro.",
    "documentation": "https://tdn.totvs.com/pages/viewpage.action?pageId=24346998"
  },
  "Directory": {
    "description": "Retorna um array com o conteúdo de um diretório especificado.",
    "parameters": {
      "cDirEsp": { "type": "caractere", "description": "Máscara de diretório (ex: '/tmp/*.*')." },
      "cAtributos": { "type": "caractere", "description": "Tipos de arquivos/diretórios a incluir." },
      "uParam1": { "type": "numérico", "description": "Parâmetro de compatibilidade (não usado)." },
      "lConvertCase": { "type": "lógico", "description": "Retorna nomes em maiúsculo se .T." },
      "nTypeOrder": { "type": "numérico", "description": "Tipo de ordenação do resultado." }
    },
    "returns": {
      "type": "vetor",
      "description": "Array bidimensional contendo nomes e atributos."    
    },
    "example": "aFiles := Directory('/tmp/*.*','D') // Lista diretórios.",
    "documentation": "https://tdn.totvs.com/display/tec/Directory"
  },
  "HTTPGet": {
    "description": "Emula um cliente HTTP usando método GET.",
    "parameters": {
      "cUrl": { "type": "caractere", "description": "URL de destino." },
      "cGetParms": { "type": "caractere", "description": "Parâmetros GET na URL (opcional)." },
      "nTimeOut": { "type": "numérico", "description": "Tempo de espera em segundos (opcional)." },
      "@cHeaderRet": { "type": "referência", "description": "Variável para receber cabeçalhos de resposta (opcional)." }
    },
    "returns": {
      "type": "caractere",
      "description": "Conteúdo retornado pelo servidor."    
    },
    "example": "cHtml := HTTPGet('http://exemplo.com','',30) // Retorna HTML.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPGet"
  },
  "HTTPPost": {
    "description": "Emula um cliente HTTP usando método POST.",
    "parameters": {
      "cUrl": { "type": "caractere", "description": "URL de destino." },
      "cGETParms": { "type": "caractere", "description": "Parâmetros GET (opcional)." },
      "cPOSTParms": { "type": "caractere", "description": "Parâmetros POST (opcional)." },
      "nTimeOut": { "type": "numérico", "description": "Tempo de espera em segundos (opcional)." },
      "aHeadStr": { "type": "vetor", "description": "Cabeçalhos adicionais (opcional)." },
      "@cHeaderRet": { "type": "referência", "description": "Variável para receber cabeçalhos de resposta (opcional)." }
    },
    "returns": {
      "type": "caractere",
      "description": "Conteúdo retornado pelo servidor."    
    },
    "example": "cResp := HTTPPost('http://exemplo.com','','param=1',30) // Retorna resposta.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPPost"
  },
  "HTTPSGet": {
    "description": "Emula um cliente HTTPS usando método GET.",
    "parameters": {
      "cUrl": { "type": "caractere", "description": "URL HTTPS de destino." },
      "cGetParms": { "type": "caractere", "description": "Parâmetros GET (opcional)." },
      "nTimeOut": { "type": "numérico", "description": "Tempo de espera (opcional)." }
    },
    "returns": {
      "type": "caractere",
      "description": "Conteúdo retornado pelo servidor HTTPS."    
    },
    "example": "cHtml := HTTPSGet('https://exemplo.com') // Retorna HTML seguro.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPSGet"
  },
  "HTTPSPost": {
    "description": "Emula um cliente HTTPS usando método POST.",
    "parameters": {
      "cUrl": { "type": "caractere", "description": "URL HTTPS de destino." },
      "cGETParms": { "type": "caractere", "description": "Parâmetros GET (opcional)." },
      "cPOSTParms": { "type": "caractere", "description": "Parâmetros POST (opcional)." },
      "nTimeOut": { "type": "numérico", "description": "Tempo de espera (opcional)." }
    },
    "returns": {
      "type": "caractere",
      "description": "Conteúdo retornado pelo servidor HTTPS."    
    },
    "example": "cResp := HTTPSPost('https://exemplo.com','','\"param=1\"') // Retorna resposta.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPSPost"
  },
  "HTTPGetStatus": {
    "description": "Retorna o status da última requisição HTTP efetuada.",
    "parameters": {},
    "returns": {
      "type": "numérico",
      "description": "Código de status HTTP conforme protocolo."    
    },
    "example": "nStatus := HTTPGetStatus() // Ex: 200 para sucesso.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPGetStatus"
  },
  "HTTPCTType": {
    "description": "Define o tipo de pacote HTTP que será enviado na requisição.",
    "parameters": {
      "cType": { "type": "caractere", "description": "Tipo de conteúdo (ex: 'JSON')." }
    },
    "returns": {
      "type": "Nil",
      "description": "Sem retorno."    
    },
    "example": "HTTPCTType('JSON') // Define JSON como content-type.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPCTType"
  },
  "HTTPPostXml": {
    "description": "Emula um cliente HTTP POST para envio de arquivos XML.",
    "parameters": {
      "cUrl": { "type": "caractere", "description": "URL de destino." },
      "cParam": { "type": "caractere", "description": "Parâmetros adicionais (opcional)." },
      "cFile": { "type": "caractere", "description": "Caminho do arquivo XML a enviar." },
      "nTimeOut": { "type": "numérico", "description": "Tempo de espera (opcional)." }
    },
    "returns": {
      "type": "caractere",
      "description": "Conteúdo retornado pelo servidor após envio do XML."    
    },
    "example": "cResp := HTTPPostXml('http://exemplo.com','','data.xml',30) // Retorna resposta.",
    "documentation": "https://tdn.totvs.com/display/tec/HTTPPostXml"
  }
}
